package project.spring.apirestpet.controller;import org.junit.jupiter.api.Assertions;import org.junit.jupiter.api.Test;import org.mockito.Mockito;import org.modelmapper.ModelMapper;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.boot.test.mock.mockito.MockBean;import project.spring.apirestpet.model.dto.PetDto;import project.spring.apirestpet.model.entity.Pet;import project.spring.apirestpet.repository.PetRepository;import project.spring.apirestpet.service.PetService;import java.lang.reflect.Type;import java.util.ArrayList;import java.util.List;import java.util.Optional;@SpringBootTestclass PetControllerTest {    @Autowired    private PetService service;    @MockBean    private PetRepository repository;    @Test    void findAll() {        List<Pet> pets = new ArrayList<>();        pets.add(new Pet(1L, "mini", 10, "cat", "persa"));        pets.add(new Pet(2L, "su", 10, "dog", "persa"));        pets.add(new Pet(3L, "lu", 10, "lion", "persa"));        Mockito.when(repository.findAll()).thenReturn(pets);        Assertions.assertEquals(3, pets.size());    }    @Test    void findById() {        Pet pet = Pet.builder().id(1L).name("mini").age(11).species("cat").breed("persa").build();        Mockito.when(repository.findById(1L)).thenReturn(Optional.ofNullable(pet));        Assertions.assertEquals(repository.findById(1L), repository.findById(pet.getId()));    }    @Test    void save() {        Pet pet = Pet.builder().id(1L).name("mini").age(11).species("cat").breed("persa").build();        Mockito.when(repository.save(pet)).thenReturn(pet);        Assertions.assertEquals(pet, repository.save(pet));    }    @Test    void delete() {        repository.deleteById(1L);        Mockito.verify(repository, Mockito.times(1)).deleteById(1L);    }}