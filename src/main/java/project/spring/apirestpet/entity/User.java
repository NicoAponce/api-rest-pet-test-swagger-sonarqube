package project.spring.apirestpet.entity;import lombok.*;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import javax.persistence.*;import java.util.Arrays;import java.util.Collection;import java.util.stream.Collectors;@Getter@Setter@NoArgsConstructor@AllArgsConstructor@Builder@Entity@Table(name = "users")public class User implements UserDetails {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    private String name;    @Column(unique = true)    private String username;    private String password;    private String authorities;    @Override    public Collection<? extends GrantedAuthority> getAuthorities() {        return Arrays.stream(authorities.split(","))                .map(SimpleGrantedAuthority::new)                .collect(Collectors.toList());    }    @Override    public String getPassword() {        return this.password;    }    @Override    public String getUsername() {        return this.username;    }    @Override    public boolean isAccountNonExpired() {        return true;    }    @Override    public boolean isAccountNonLocked() {        return true;    }    @Override    public boolean isCredentialsNonExpired() {        return true;    }    @Override    public boolean isEnabled() {        return true;    }}